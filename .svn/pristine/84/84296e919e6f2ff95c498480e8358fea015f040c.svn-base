using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using System.Threading.Tasks;
using sunamo.Enums;

// !Hotovo!-
namespace sunamo
{
    /// <summary>
    /// Ma datum a zpravu.
    /// Predstavuje zpravu v logu s textem a datem. 
    /// M pro De(parsovani).
    /// </summary>
    public abstract class LogMessageAbstract<T,  Z> : ILogMessageAbstract<T,  Z>
    {
        #region DPP


        public T Bg { get; set; }
        /// <summary>
        /// datum, kdy byla zprava ulozena.
        /// </summary>
        public DateTime Dt { get; set; }
        public string Dts()
        {
                return Dt.ToString(LogServiceData.ciForShowing);
        }
        public string Ts { get; set; }
        /// <summary>
        /// text zpravy.
        /// </summary>
        public string Message { get; set; }
        
        public TypeOfMessage st = TypeOfMessage.Appeal;
        
        #endregion

        #region base


        /// <summary>
        /// EK, OOP.
        /// </summary>
        /// <param name="datum"></param>
        /// <param name="zprava"></param>
        public async Task<LogMessageAbstract<T,  Z>> Initialize(DateTime datum, TypeOfMessage st, string zprava, T bg)
        {
            this.Dt = datum;
            this.st = st;
            //SetBg(ls.GetBackgroundBrushOfTypeOfMessage(st));
            SetBg(bg);
            this.Message = zprava;
            Ts = Dts() + " - " + Message;
            return this;
        }

        protected abstract  void SetBg(T c);
        

        #endregion

        /// <summary>
        /// G O ZpravaLogu s nesm. udaji.
        /// </summary>
        /// <summary>
        /// TS. Format pro ukladani do souboru.
        /// A1 musí být true pokud se jedná o uložení do souboru.
        /// </summary>
        /// <returns></returns>
        public override string ToString()
        {
            string odd = " - ";
            return Dt.ToString(LogServiceData.ciForParse) +  odd + st + odd + Message;
        }

        

        
    }
}
